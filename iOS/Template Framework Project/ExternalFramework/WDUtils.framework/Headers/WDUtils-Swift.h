// Generated by Apple Swift version 3.0.1 (swiftlang-800.0.58.6 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#import <WDUtils/WDUtils.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_PROTOCOL("_TtP7WDUtils27AppearanceAnimationDelegate_")
@protocol AppearanceAnimationDelegate
- (void)performAppearanceAnimationWithCompletion:(SWIFT_NOESCAPE void (^ _Nonnull)(void))completion;
- (BOOL)shouldPerformAppearanceAnimation;
@end

@class NSData;

/**
  Class to access certificatse per domain, for use with certificate pinning
*/
SWIFT_CLASS("_TtC7WDUtils16CertificateStore")
@interface CertificateStore : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CertificateStore * _Nonnull sharedStore;)
+ (CertificateStore * _Nonnull)sharedStore;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
/**
  Add the given certificate to the list for the specified domain.
  A domain matches that domain and any subdomains.
  \code
  data
  \endcode should be a DER encoded certificate
*/
- (void)addDataWithData:(NSData * _Nonnull)data forDomain:(NSString * _Nonnull)domain;
/**
  Accepts a PEM encoded certificate (base64 string bookended by BEGIN/END CERTIFICATE lines), converts it to DER then adds it to
  the certificate store
*/
- (void)addPEMStringWithString:(NSString * _Nonnull)string forDomain:(NSString * _Nonnull)domain;
/**
  Accepts a PEM encoded certificate data
*/
- (void)addPEMDataWithData:(NSData * _Nonnull)data forDomain:(NSString * _Nonnull)domain;
/**
  Returns the array of certificates (as NSData) that are pinned for the given domain
  nil signifies this domain is not pinned.
  An empty array signifies that the domain wanted to be pinned but there was an error reading the certificate.
  This should be treated as an automatic pinning failure, to avoid letting the app run on a domain if there is an error
  in the certificate data entry
*/
- (NSArray<NSData *> * _Nullable)certificatesForURLWithUrl:(NSURL * _Nonnull)url;
/**
  Returns an array of SecCertificate objects
*/
- (NSArray * _Nullable)certificateRefsForURLWithUrl:(NSURL * _Nonnull)url;
- (void)removeAll;
@end


SWIFT_CLASS("_TtC7WDUtils22FileInteractionManager")
@interface FileInteractionManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FileInteractionManager * _Nonnull sharedManager;)
+ (FileInteractionManager * _Nonnull)sharedManager;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@property (nonatomic, copy) void (^ _Nullable noValidParticipantHandler)(NSURL * _Nonnull);
- (void)openFileWithURL:(NSURL * _Nonnull)url;
@end

enum LoadingViewIndicatorStyle : NSInteger;
@class UIViewController;
@class NSCoder;

SWIFT_CLASS("_TtC7WDUtils11LoadingView")
@interface LoadingView : UIView
@property (nonatomic) UIEdgeInsets contentInset;
@property (nonatomic) enum LoadingViewIndicatorStyle indicatorStyle;
@property (nonatomic, strong) UIViewController * _Nullable alignmentViewController;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
@end

@class UINavigationController;
@protocol UIViewControllerTransitionCoordinator;
@class NSBundle;

SWIFT_CLASS("_TtC7WDUtils21LoadingViewController")
@interface LoadingViewController : WDGenericViewController
@property (nonatomic, readonly) BOOL isOverlay;
@property (nonatomic, strong) UINavigationController * _Nullable overlayNavigationController;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)loadView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LoadingViewIndicatorStyle) {
  LoadingViewIndicatorStyleBlueCloud = 0,
  LoadingViewIndicatorStyleWhite = 1,
  LoadingViewIndicatorStyleGray = 2,
  LoadingViewIndicatorStyleBlueCircle = 3,
};


@interface NSAttributedString (SWIFT_EXTENSION(WDUtils))
- (CGFloat)heightWithWidth:(CGFloat)width;
@end


@interface NSLayoutConstraint (SWIFT_EXTENSION(WDUtils))
/**
  Activate constraints based on the boolean test. The other set of constraints will be deactivated.
  \param constraintsIfTestPassed Constraints that will be activated if test passed

  \param constraintsIfTestFailed Constraints that will be activated if test failed

  \param test A function that return Boolean to determine which set of constraints to be activated

*/
+ (void)activateConstraintsWithConstraintsIfTestPassed:(NSArray<NSLayoutConstraint *> * _Nonnull)constraintsIfTestPassed constraintsIfTestFailed:(NSArray<NSLayoutConstraint *> * _Nonnull)constraintsIfTestFailed test:(BOOL)test;
@end


@interface NSNumber (SWIFT_EXTENSION(WDUtils))
- (CGFloat)cgfloatValue;
@end

enum TransactionDataType : NSInteger;

SWIFT_CLASS("_TtC7WDUtils15TransactionData")
@interface TransactionData : NSObject
@property (nonatomic, readonly) enum TransactionDataType type;
@property (nonatomic, readonly, copy) NSString * _Nullable userID;
- (nonnull instancetype)initWithUserID:(NSString * _Nonnull)userID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, TransactionDataType) {
  TransactionDataTypeUserProfile = 0,
};

@class WDTransaction;

SWIFT_CLASS("_TtC7WDUtils15TransactionInfo")
@interface TransactionInfo : NSObject
@property (nonatomic) BOOL valid;
@property (nonatomic, readonly, strong) WDTransaction * _Nonnull transaction;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@protocol TransactionManagerDelegate;

SWIFT_CLASS("_TtC7WDUtils18TransactionManager")
@interface TransactionManager : NSObject
+ (void)testing_initializeWithDelegate:(id <TransactionManagerDelegate> _Nonnull)delegate;
+ (void)initializeWithDelegate:(id <TransactionManagerDelegate> _Nonnull)delegate SWIFT_METHOD_FAMILY(none);
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TransactionManager * _Nonnull sharedManager;)
+ (TransactionManager * _Nonnull)sharedManager;
@property (nonatomic) BOOL skipTransientViewControllers;
- (void)reset;
- (WDTransaction * _Nullable)transactionForTransactionController:(WDGenericViewController * _Nonnull)controller;
- (WDTransaction * _Nullable)transactionForTransactionData:(TransactionData * _Nonnull)data;
- (WDTransaction * _Nullable)topTransaction;
- (void)commitTransaction:(WDTransaction * _Nonnull)transaction;
- (void)invalidateTransactionInfosWithKeys:(NSArray<NSString *> * _Nonnull)keys;
- (void)commitTransaction:(WDTransaction * _Nonnull)transaction completion:(void (^ _Nullable)(void))completion;
- (void)popTransactionWithCompletion:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP7WDUtils26TransactionManagerDelegate_")
@protocol TransactionManagerDelegate
@property (nonatomic, readonly, strong) UINavigationController * _Nullable contentNavigationController;
@property (nonatomic, readonly, strong) WDGenericViewController * _Nonnull mainPresentationController;
- (void)willPushOnContentNavigationWithCompletion:(SWIFT_NOESCAPE void (^ _Nonnull)(BOOL))completion;
- (void)willPopLastFromContentNavigationWithCompletion:(SWIFT_NOESCAPE void (^ _Nonnull)(BOOL))completion;
- (WDTransaction * _Nullable)transactionForTransactionData:(TransactionData * _Nonnull)data;
@end


@interface UIDevice (SWIFT_EXTENSION(WDUtils))
@property (nonatomic, readonly, copy) NSString * _Nonnull modelName;
@end


@interface UIImage (SWIFT_EXTENSION(WDUtils))
- (nullable instancetype)initWithOptionallyNamed:(NSString * _Nullable)name;
@end


@interface UILabel (SWIFT_EXTENSION(WDUtils))
- (CGFloat)heightWithWidth:(CGFloat)width;
- (CGFloat)heightWithAttributedWidth:(CGFloat)width;
@end


@interface UITableView (SWIFT_EXTENSION(WDUtils))
@property (nonatomic, readonly, copy) NSArray<NSIndexPath *> * _Nonnull indexPathsInsideBounds;
@end


@interface UIView (SWIFT_EXTENSION(WDUtils))
@property (nonatomic, readonly, strong) UIViewController * _Nullable nearestViewController;
- (void)setBoundsAndCenterWithFrameWithFrame:(CGRect)frame;
- (NSArray<NSLayoutConstraint *> * _Nonnull)subviewConstraintsForLayoutMarginsWithSubview:(UIView * _Nonnull)subview;
- (NSArray<NSLayoutConstraint *> * _Nonnull)subviewConstraintsForEdgeInsetsWithSubview:(UIView * _Nonnull)subview insets:(UIEdgeInsets)insets;
@end


@interface UIWindow (SWIFT_EXTENSION(WDUtils))
@property (nonatomic, readonly, strong) UIViewController * _Nullable topViewController;
@end


SWIFT_CLASS("_TtC7WDUtils27WDAppearanceAnimationHelper")
@interface WDAppearanceAnimationHelper : NSObject
@property (nonatomic, weak) id <AppearanceAnimationDelegate> _Nullable delegate;
@property (nonatomic) BOOL animatedAppearance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAnimationAppearanceDelegate:(id <AppearanceAnimationDelegate> _Nonnull)animationAppearanceDelegate;
- (void)perfromAppearanceAnimationIfRequired;
- (BOOL)shouldPerformAppearanceAnimation;
@end

typedef SWIFT_ENUM(NSInteger, WDAppearanceAnimationState) {
  WDAppearanceAnimationStateNone = 0,
  WDAppearanceAnimationStateInProgress = 1,
  WDAppearanceAnimationStateFinished = 2,
};

@class UIFont;
@class UIColor;

SWIFT_CLASS("_TtC7WDUtils25WDAttributedStringBuilder")
@interface WDAttributedStringBuilder : NSObject <NSCopying>
@property (nonatomic, strong) UIFont * _Nullable font;
@property (nonatomic, strong) UIColor * _Nullable textColor;
- (NSAttributedString * _Nonnull)attributedStringForString:(NSString * _Nonnull)string;
- (CGSize)attributedStringSizeForString:(NSString * _Nonnull)string;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7WDUtils34WDAttributedTextCollectionViewCell")
@interface WDAttributedTextCollectionViewCell : UICollectionViewCell
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic, strong) NSAttributedString * _Nullable highlightedAttributedText;
@property (nonatomic, strong) NSAttributedString * _Nullable selectedAttributedText;
@property (nonatomic, setter=setHighlighted:) BOOL isHighlighted;
@property (nonatomic, setter=setSelected:) BOOL isSelected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (UIEdgeInsets)sizeInsets;
+ (UIEdgeInsets)textInsets;
- (void)layoutSubviews;
@end

enum WDButtonColor : NSInteger;

SWIFT_CLASS("_TtC7WDUtils8WDButton")
@interface WDButton : UIButton
@property (nonatomic) enum WDButtonColor color;
@property (nonatomic, setter=setHighlighted:) BOOL isHighlighted;
@property (nonatomic, setter=setEnabled:) BOOL isEnabled;
- (nonnull instancetype)initWithColor:(enum WDButtonColor)color OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)drawRect:(CGRect)rect;
- (CGSize)sizeThatFits:(CGSize)size;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame;
@property (nonatomic) NSInteger ib_color;
- (void)prepareForInterfaceBuilder;
@end

typedef SWIFT_ENUM(NSInteger, WDButtonColor) {
  WDButtonColorGray = 0,
  WDButtonColorGreen = 1,
  WDButtonColorRed = 2,
  WDButtonColorOrange = 3,
  WDButtonColorTransparent = 4,
  WDButtonColorWhite = 5,
};

@protocol UIViewControllerContextTransitioning;

SWIFT_CLASS("_TtC7WDUtils27WDFullscreenModalTransition")
@interface WDFullscreenModalTransition : NSObject <UIViewControllerAnimatedTransitioning>
@property (nonatomic) BOOL presenting;
@property (nonatomic) BOOL presentedFromModalContext;
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)context;
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)context;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7WDUtils38WDFullscreenModalTransitioningDelegate")
@interface WDFullscreenModalTransitioningDelegate : NSObject <UIViewControllerTransitioningDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) WDFullscreenModalTransitioningDelegate * _Nonnull sharedInstance;)
+ (WDFullscreenModalTransitioningDelegate * _Nonnull)sharedInstance;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)controller presentingController:(UIViewController * _Nonnull)presentingController sourceController:(UIViewController * _Nonnull)sourceController;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)controller;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, WDGradientStyle) {
  WDGradientStyleNone = 0,
  WDGradientStyleGray = 1,
  WDGradientStyleDarkBlue = 2,
  WDGradientStyleLightBlue = 3,
  WDGradientStyleMaster = 4,
  WDGradientStyleDetailHeader = 5,
  WDGradientStyleWhiteToGray = 6,
  WDGradientStyleLightGray = 7,
  WDGradientStyleBlueToDarkBlue = 8,
  WDGradientStyleDefaultLoadingView = 9,
  WDGradientStyleAppBackground = 10,
};


SWIFT_CLASS("_TtC7WDUtils14WDGradientView")
@interface WDGradientView : UIView
@property (nonatomic) enum WDGradientStyle gradientStyle;
@property (nonatomic, copy) NSArray<UIColor *> * _Nullable colors;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable locations;
@property (nonatomic) BOOL radial;
@property (nonatomic) BOOL horizontal;
@property (nonatomic) BOOL animateBackgroundChange;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(enum WDGradientStyle)style;
- (nonnull instancetype)initWithFrame:(CGRect)frame colorsArray:(NSArray<UIColor *> * _Nonnull)colorsArray;
- (nonnull instancetype)initWithFrame:(CGRect)frame colorsArray:(NSArray<UIColor *> * _Nonnull)colorsArray horizontal:(BOOL)horizontal;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass;
- (void)updateBackgroundColorToCurrentColor;
@end


SWIFT_CLASS("_TtC7WDUtils17WDModalTransition")
@interface WDModalTransition : NSObject <UIViewControllerAnimatedTransitioning>
+ (CGRect)rectForDismissedState:(id <UIViewControllerContextTransitioning> _Nonnull)context forPresentation:(BOOL)forPresentation;
+ (CGRect)rectForPresentedState:(id <UIViewControllerContextTransitioning> _Nonnull)context forPresentation:(BOOL)forPresentation;
@property (nonatomic) BOOL presenting;
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)context;
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)context;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7WDUtils28WDModalTransitioningDelegate")
@interface WDModalTransitioningDelegate : NSObject <UIViewControllerTransitioningDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) WDModalTransitioningDelegate * _Nonnull sharedInstance;)
+ (WDModalTransitioningDelegate * _Nonnull)sharedInstance;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)controller presentingController:(UIViewController * _Nonnull)presentingController sourceController:(UIViewController * _Nonnull)sourceController;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)controller;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7WDUtils20WDNavigationBehavior")
@interface WDNavigationBehavior : NSObject
@property (nonatomic, copy) NSString * _Nullable cancelLabel;
@property (nonatomic, copy) NSString * _Nullable closeLabel;
@property (nonatomic, copy) NSString * _Nullable doneLabel;
@property (nonatomic, strong) UIImage * _Nullable navBackgroundImage;
@property (nonatomic, strong) UIImage * _Nullable shadowImage;
@property (nonatomic, strong) UIImage * _Nullable smallShadowImage;
@property (nonatomic, strong) UIImage * _Nullable backImage;
@property (nonatomic, strong) UIImage * _Nullable whiteBackImage;
@property (nonatomic, strong) UIImage * _Nullable homeImage;
@property (nonatomic, copy) void (^ _Nullable homeCallback)(void);
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) WDNavigationBehavior * _Nonnull defaultNavigationBehavior;)
+ (WDNavigationBehavior * _Nonnull)defaultNavigationBehavior;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, WDShadowDirection) {
  WDShadowDirectionUp = 0,
  WDShadowDirectionDown = 1,
  WDShadowDirectionRight = 2,
  WDShadowDirectionLeft = 3,
};


SWIFT_CLASS("_TtC7WDUtils12WDShadowView")
@interface WDShadowView : UIView
@property (nonatomic) enum WDShadowDirection shadowDirection;
@property (nonatomic) CGFloat shadowOpacity;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end

@class WDTabView;
@class UIEvent;

SWIFT_CLASS("_TtC7WDUtils22WDTabViewSelectionView")
@interface WDTabViewSelectionView : UICollectionReusableView
@property (nonatomic, weak) WDTabView * _Nullable tabView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event;
- (void)drawRect:(CGRect)rect;
@end


SWIFT_CLASS("_TtC7WDUtils27WDTabSelectionUnderlineView")
@interface WDTabSelectionUnderlineView : WDTabViewSelectionView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class CALayer;
@class UICollectionViewLayout;
@protocol WDTabViewDataSource;
@protocol WDTabViewDelegate;

SWIFT_CLASS("_TtC7WDUtils9WDTabView")
@interface WDTabView : UIView <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UICollectionViewDelegate>
@property (nonatomic, readonly, strong) UICollectionView * _Null_unspecified collectionView;
@property (nonatomic, weak) id <WDTabViewDataSource> _Nullable dataSource;
@property (nonatomic, weak) id <WDTabViewDelegate> _Nullable delegate;
@property (nonatomic, strong) UIColor * _Nullable tabColor;
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable selectedTextColor;
@property (nonatomic) NSUnderlineStyle selectedTextUnderlineStyle;
@property (nonatomic, strong) UIFont * _Nullable textFont;
@property (nonatomic, strong) UIFont * _Nullable selectedFont;
@property (nonatomic) CGFloat appearanceAnimationProgress;
@property (nonatomic) CGFloat sideInset;
@property (nonatomic, readonly, strong) WDAttributedStringBuilder * _Nonnull selectedStringBuilder;
@property (nonatomic, readonly, strong) CALayer * _Nonnull selectionMask;
@property (nonatomic, strong) UIView * _Nonnull backgroundView;
- (nonnull instancetype)initWithFrame:(CGRect)frame;
- (nonnull instancetype)initWithFrame:(CGRect)frame selectionViewClass:(Class _Nonnull)selectionViewClass OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)selectEntryAtIndex:(NSInteger)index animated:(BOOL)animated;
- (void)selectEntryAtIndex:(NSInteger)index;
- (void)reloadData;
- (NSArray<UICollectionViewCell *> * _Nonnull)visibleTabs;
- (NSInteger)indexForTab:(UIView * _Nonnull)tab;
- (void)layoutSubviews;
- (void)drawRect:(CGRect)rect;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_PROTOCOL("_TtP7WDUtils19WDTabViewDataSource_")
@protocol WDTabViewDataSource
- (NSInteger)numberOfEntriesInTabView:(WDTabView * _Nonnull)tabView;
- (NSString * _Nonnull)textForEntryInTabView:(WDTabView * _Nonnull)tabView atIndex:(NSInteger)atIndex;
@end


SWIFT_PROTOCOL("_TtP7WDUtils17WDTabViewDelegate_")
@protocol WDTabViewDelegate
@optional
- (BOOL)tabView:(WDTabView * _Nonnull)tabView shouldSelectEntryAtIndex:(NSInteger)shouldSelectEntryAtIndex;
- (void)tabView:(WDTabView * _Nonnull)tabView didSelectEntryAtIndex:(NSInteger)didSelectEntryAtIndex;
@end



SWIFT_CLASS("_TtC7WDUtils28WDTransitionLayoutAttributes")
@interface WDTransitionLayoutAttributes : UICollectionViewLayoutAttributes
@property (nonatomic) BOOL appearanceAnimationComplete;
@property (nonatomic) CGFloat appearanceAnimationProgress;
- (BOOL)isEqual:(id _Nullable)object;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
